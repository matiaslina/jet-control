/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * Main.java
 *
 * Created on 20-dic-2011, 15:56:23
 */
package style;

import java.awt.print.PrinterException;
import java.io.IOException;
import java.text.ParseException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import style.Bases.*;
import java.sql.*;
import java.text.MessageFormat;
import java.util.Calendar;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author Tony
 */
public class Main extends javax.swing.JFrame {

    /**
     * Creates new form Main
     */
    public Main() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pCaja = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        campoBuscar = new javax.swing.JTextField();
        botonBuscar = new javax.swing.JButton();
        eContacto = new javax.swing.JLabel();
        eNombre = new javax.swing.JLabel();
        campoNombre = new javax.swing.JTextField();
        eApellido = new javax.swing.JLabel();
        campoApellido = new javax.swing.JTextField();
        eCelular = new javax.swing.JLabel();
        campoCelular = new javax.swing.JTextField();
        eDireccion = new javax.swing.JLabel();
        campoDireccion = new javax.swing.JTextField();
        eCorreo = new javax.swing.JLabel();
        campoDireccionPart = new javax.swing.JTextField();
        eTelefono = new javax.swing.JLabel();
        eCobradror = new javax.swing.JLabel();
        ePlan = new javax.swing.JLabel();
        campoPlanA = new javax.swing.JTextField();
        eDe = new javax.swing.JLabel();
        campoPlanB = new javax.swing.JTextField();
        ePLAN = new javax.swing.JLabel();
        eMonto = new javax.swing.JLabel();
        campoMontoPagado = new javax.swing.JTextField();
        eCuotasPagas = new javax.swing.JLabel();
        campoCuotasPagas = new javax.swing.JTextField();
        eAtraso = new javax.swing.JLabel();
        campoAtraso = new javax.swing.JTextField();
        eOpciones = new javax.swing.JLabel();
        botonPagos = new javax.swing.JButton();
        botonModificar = new javax.swing.JButton();
        botonAgregarPlanNuevo = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tablaHistorial = new javax.swing.JTable();
        listaBuscar = new java.awt.List();
        jScrollPane1 = new javax.swing.JScrollPane();
        campoTelefono = new javax.swing.JTextArea();
        eApellido1 = new javax.swing.JLabel();
        campoParticular = new javax.swing.JTextField();
        campoCobrador = new javax.swing.JTextField();
        nuevoCobrador = new javax.swing.JComboBox();
        btnAgregarInteres = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        campoInteres = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tablaBonita = new javax.swing.JTable();
        jPanel5 = new javax.swing.JPanel();
        listaCobradores = new javax.swing.JComboBox();
        botonImprimir = new javax.swing.JButton();
        botonCobranza = new javax.swing.JButton();
        botonCalcularPagos = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        campoPagos = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        tablaCaja = new javax.swing.JTable();
        botonIngreso = new javax.swing.JButton();
        botonEgreso = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        listaMeses = new javax.swing.JComboBox();
        listaCobradoresCaja = new javax.swing.JComboBox();
        campoCobranzaTotal = new javax.swing.JTextField();
        BotonCobraza = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        cbVerListaMeses = new javax.swing.JComboBox();
        jButton1 = new javax.swing.JButton();
        btnImprimirCaja = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        campoSaldo = new javax.swing.JTextField();
        botonActualizar = new javax.swing.JButton();
        jScrollPane5 = new javax.swing.JScrollPane();
        Notepad note = new Notepad();
        note.ConectarSQL();
        jtxtNotepad = new javax.swing.JTextArea();
        jLabel7 = new javax.swing.JLabel();
        btnGuardarNotepad = new javax.swing.JButton();
        barraMenu = new javax.swing.JMenuBar();
        mArchivo = new javax.swing.JMenu();
        menuAgregarContacto = new javax.swing.JMenuItem();
        menuAgregarCobrador = new javax.swing.JMenuItem();
        jMenu1 = new javax.swing.JMenu();
        jmniCalculadora = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        menuSalir = new javax.swing.JMenuItem();
        mEdicion = new javax.swing.JMenu();
        guardarCambios = new javax.swing.JMenuItem();
        jmiAgregarInteres = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(style.StyleApp.class).getContext().getResourceMap(Main.class);
        setTitle(resourceMap.getString("Form.title")); // NOI18N
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setMinimumSize(new java.awt.Dimension(1366, 768));
        setName("Form"); // NOI18N

        pCaja.setName("pCaja"); // NOI18N

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel1.setMinimumSize(new java.awt.Dimension(1366, 768));
        jPanel1.setName("jPanel1"); // NOI18N
        jPanel1.setPreferredSize(new java.awt.Dimension(1366, 768));
        jPanel1.setLayout(null);

        campoBuscar.setText(resourceMap.getString("campoBuscar.text")); // NOI18N
        campoBuscar.setName("campoBuscar"); // NOI18N
        jPanel1.add(campoBuscar);
        campoBuscar.setBounds(12, 17, 176, 27);

        botonBuscar.setText(resourceMap.getString("botonBuscar.text")); // NOI18N
        botonBuscar.setName("botonBuscar"); // NOI18N
        botonBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonBuscarActionPerformed(evt);
            }
        });
        jPanel1.add(botonBuscar);
        botonBuscar.setBounds(194, 16, 54, 27);

        eContacto.setFont(resourceMap.getFont("eContacto.font")); // NOI18N
        eContacto.setText(resourceMap.getString("eContacto.text")); // NOI18N
        eContacto.setName("eContacto"); // NOI18N
        jPanel1.add(eContacto);
        eContacto.setBounds(641, 13, 249, 22);

        eNombre.setText(resourceMap.getString("eNombre.text")); // NOI18N
        eNombre.setName("eNombre"); // NOI18N
        jPanel1.add(eNombre);
        eNombre.setBounds(366, 53, 52, 17);

        campoNombre.setEditable(false);
        campoNombre.setText(resourceMap.getString("campoNombre.text")); // NOI18N
        campoNombre.setName("campoNombre"); // NOI18N
        jPanel1.add(campoNombre);
        campoNombre.setBounds(413, 50, 211, 27);

        eApellido.setText(resourceMap.getString("eApellido.text")); // NOI18N
        eApellido.setName("eApellido"); // NOI18N
        jPanel1.add(eApellido);
        eApellido.setBounds(1020, 150, 60, 17);

        campoApellido.setEditable(false);
        campoApellido.setName("campoApellido"); // NOI18N
        jPanel1.add(campoApellido);
        campoApellido.setBounds(761, 50, 211, 27);

        eCelular.setText(resourceMap.getString("eCelular.text")); // NOI18N
        eCelular.setName("eCelular"); // NOI18N
        jPanel1.add(eCelular);
        eCelular.setBounds(1053, 53, 44, 17);

        campoCelular.setEditable(false);
        campoCelular.setName("campoCelular"); // NOI18N
        jPanel1.add(campoCelular);
        campoCelular.setBounds(1100, 50, 211, 27);

        eDireccion.setText(resourceMap.getString("eDireccion.text")); // NOI18N
        eDireccion.setName("eDireccion"); // NOI18N
        jPanel1.add(eDireccion);
        eDireccion.setBounds(360, 104, 59, 17);

        campoDireccion.setEditable(false);
        campoDireccion.setName("campoDireccion"); // NOI18N
        jPanel1.add(campoDireccion);
        campoDireccion.setBounds(413, 101, 211, 27);

        eCorreo.setText(resourceMap.getString("eCorreo.text")); // NOI18N
        eCorreo.setName("eCorreo"); // NOI18N
        jPanel1.add(eCorreo);
        eCorreo.setBounds(691, 104, 60, 17);

        campoDireccionPart.setEditable(false);
        campoDireccionPart.setName("campoDireccionPart"); // NOI18N
        jPanel1.add(campoDireccionPart);
        campoDireccionPart.setBounds(761, 101, 211, 27);

        eTelefono.setText(resourceMap.getString("eTelefono.text")); // NOI18N
        eTelefono.setName("eTelefono"); // NOI18N
        jPanel1.add(eTelefono);
        eTelefono.setBounds(1006, 104, 80, 17);

        eCobradror.setText(resourceMap.getString("eCobradror.text")); // NOI18N
        eCobradror.setName("eCobradror"); // NOI18N
        jPanel1.add(eCobradror);
        eCobradror.setBounds(358, 155, 59, 17);

        ePlan.setText(resourceMap.getString("ePlan.text")); // NOI18N
        ePlan.setName("ePlan"); // NOI18N
        jPanel1.add(ePlan);
        ePlan.setBounds(731, 155, 27, 17);

        campoPlanA.setEditable(false);
        campoPlanA.setName("campoPlanA"); // NOI18N
        jPanel1.add(campoPlanA);
        campoPlanA.setBounds(761, 152, 69, 27);

        eDe.setText(resourceMap.getString("eDe.text")); // NOI18N
        eDe.setName("eDe"); // NOI18N
        jPanel1.add(eDe);
        eDe.setBounds(840, 155, 16, 17);

        campoPlanB.setEditable(false);
        campoPlanB.setName("campoPlanB"); // NOI18N
        jPanel1.add(campoPlanB);
        campoPlanB.setBounds(862, 152, 110, 27);

        ePLAN.setFont(resourceMap.getFont("ePLAN.font")); // NOI18N
        ePLAN.setText(resourceMap.getString("ePLAN.text")); // NOI18N
        ePLAN.setName("ePLAN"); // NOI18N
        jPanel1.add(ePLAN);
        ePLAN.setBounds(665, 220, 208, 22);

        eMonto.setText(resourceMap.getString("eMonto.text")); // NOI18N
        eMonto.setName("eMonto"); // NOI18N
        jPanel1.add(eMonto);
        eMonto.setBounds(334, 272, 92, 17);

        campoMontoPagado.setEditable(false);
        campoMontoPagado.setName("campoMontoPagado"); // NOI18N
        jPanel1.add(campoMontoPagado);
        campoMontoPagado.setBounds(413, 269, 211, 27);

        eCuotasPagas.setText(resourceMap.getString("eCuotasPagas.text")); // NOI18N
        eCuotasPagas.setName("eCuotasPagas"); // NOI18N
        jPanel1.add(eCuotasPagas);
        eCuotasPagas.setBounds(655, 272, 126, 17);

        campoCuotasPagas.setEditable(false);
        campoCuotasPagas.setName("campoCuotasPagas"); // NOI18N
        jPanel1.add(campoCuotasPagas);
        campoCuotasPagas.setBounds(761, 269, 211, 27);

        eAtraso.setText(resourceMap.getString("eAtraso.text")); // NOI18N
        eAtraso.setName("eAtraso"); // NOI18N
        jPanel1.add(eAtraso);
        eAtraso.setBounds(1054, 272, 42, 17);

        campoAtraso.setEditable(false);
        campoAtraso.setName("campoAtraso"); // NOI18N
        campoAtraso.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                campoAtrasoActionPerformed(evt);
            }
        });
        jPanel1.add(campoAtraso);
        campoAtraso.setBounds(1096, 269, 211, 27);

        eOpciones.setFont(resourceMap.getFont("eOpciones.font")); // NOI18N
        eOpciones.setText(resourceMap.getString("eOpciones.text")); // NOI18N
        eOpciones.setName("eOpciones"); // NOI18N
        jPanel1.add(eOpciones);
        eOpciones.setBounds(350, 355, 227, 22);

        botonPagos.setText(resourceMap.getString("botonPagos.text")); // NOI18N
        botonPagos.setName("botonPagos"); // NOI18N
        botonPagos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonPagosActionPerformed(evt);
            }
        });
        jPanel1.add(botonPagos);
        botonPagos.setBounds(621, 359, 88, 27);

        botonModificar.setText(resourceMap.getString("botonModificar.text")); // NOI18N
        botonModificar.setName("botonModificar"); // NOI18N
        botonModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonModificarActionPerformed(evt);
            }
        });
        jPanel1.add(botonModificar);
        botonModificar.setBounds(750, 360, 87, 27);

        botonAgregarPlanNuevo.setText(resourceMap.getString("botonAgregarPlanNuevo.text")); // NOI18N
        botonAgregarPlanNuevo.setName("botonAgregarPlanNuevo"); // NOI18N
        botonAgregarPlanNuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonAgregarPlanNuevoActionPerformed(evt);
            }
        });
        jPanel1.add(botonAgregarPlanNuevo);
        botonAgregarPlanNuevo.setBounds(870, 360, 82, 27);

        jScrollPane2.setName("jScrollPane2"); // NOI18N

        tablaHistorial.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Fecha", "Plan"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tablaHistorial.setName("tablaHistorial"); // NOI18N
        jScrollPane2.setViewportView(tablaHistorial);
        tablaHistorial.getColumnModel().getColumn(0).setHeaderValue(resourceMap.getString("tablaHistorial.columnModel.title0")); // NOI18N
        tablaHistorial.getColumnModel().getColumn(1).setHeaderValue(resourceMap.getString("tablaHistorial.columnModel.title1")); // NOI18N

        jPanel1.add(jScrollPane2);
        jScrollPane2.setBounds(270, 393, 1059, 230);

        listaBuscar.setName("listaBuscar"); // NOI18N
        listaBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                listaBuscarActionPerformed(evt);
            }
        });
        jPanel1.add(listaBuscar);
        listaBuscar.setBounds(12, 50, 247, 570);

        jScrollPane1.setName("jScrollPane1"); // NOI18N

        campoTelefono.setColumns(20);
        campoTelefono.setRows(5);
        campoTelefono.setName("campoTelefono"); // NOI18N
        jScrollPane1.setViewportView(campoTelefono);

        jPanel1.add(jScrollPane1);
        jScrollPane1.setBounds(1090, 100, 220, 30);

        eApellido1.setText(resourceMap.getString("eApellido1.text")); // NOI18N
        eApellido1.setName("eApellido1"); // NOI18N
        jPanel1.add(eApellido1);
        eApellido1.setBounds(714, 53, 50, 17);

        campoParticular.setEditable(false);
        campoParticular.setName("campoParticular"); // NOI18N
        jPanel1.add(campoParticular);
        campoParticular.setBounds(1100, 150, 211, 27);

        campoCobrador.setEditable(false);
        campoCobrador.setText(resourceMap.getString("campoCobrador.text")); // NOI18N
        campoCobrador.setName("campoCobrador"); // NOI18N
        jPanel1.add(campoCobrador);
        campoCobrador.setBounds(420, 150, 210, 27);

        nuevoCobrador.setEnabled(false);
        nuevoCobrador.setName("nuevoCobrador"); // NOI18N
        BCobradores cobradorD = new BCobradores();
        cobradorD.ConectarSQL();
        try {
            cobradorD.getNombreApellido(nuevoCobrador);
        }catch (SQLException ex ){nuevoCobrador.addItem("Error");}
        cobradorD.CerrarSQL();
        jPanel1.add(nuevoCobrador);
        nuevoCobrador.setBounds(420, 180, 210, 27);

        btnAgregarInteres.setText(resourceMap.getString("btnAgregarInteres.text")); // NOI18N
        btnAgregarInteres.setName("btnAgregarInteres"); // NOI18N
        btnAgregarInteres.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarInteresActionPerformed(evt);
            }
        });
        jPanel1.add(btnAgregarInteres);
        btnAgregarInteres.setBounds(1090, 360, 110, 27);

        jLabel6.setText(resourceMap.getString("jLabel6.text")); // NOI18N
        jLabel6.setName("jLabel6"); // NOI18N
        jPanel1.add(jLabel6);
        jLabel6.setBounds(720, 190, 43, 17);

        campoInteres.setText(resourceMap.getString("campoInteres.text")); // NOI18N
        campoInteres.setName("campoInteres"); // NOI18N
        jPanel1.add(campoInteres);
        campoInteres.setBounds(770, 185, 200, 30);

        pCaja.addTab(resourceMap.getString("jPanel1.TabConstraints.tabTitle"), jPanel1); // NOI18N

        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel2.setName("jPanel2"); // NOI18N
        jPanel2.setLayout(null);

        jScrollPane3.setName("jScrollPane3"); // NOI18N

        tablaBonita.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        tablaBonita.setFont(resourceMap.getFont("tablaBonita.font")); // NOI18N
        tablaBonita.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Orden", "Pago", "Monto Cuota", "Cuotas", "Nombre", "Direccion", "Atraso", "Pago Anterior", "Pagado", "Restante", "Vencimiento"
            }
        ));
        tablaBonita.setName("tablaBonita"); // NOI18N
        tablaBonita.getTableHeader().setReorderingAllowed(false);
        jScrollPane3.setViewportView(tablaBonita);
        tablaBonita.getColumnModel().getColumn(0).setHeaderValue(resourceMap.getString("tablaBonita.columnModel.title0")); // NOI18N
        tablaBonita.getColumnModel().getColumn(1).setHeaderValue(resourceMap.getString("tablaBonita.columnModel.title1")); // NOI18N
        tablaBonita.getColumnModel().getColumn(2).setHeaderValue(resourceMap.getString("tablaBonita.columnModel.title2")); // NOI18N
        tablaBonita.getColumnModel().getColumn(3).setHeaderValue(resourceMap.getString("tablaBonita.columnModel.title3")); // NOI18N
        tablaBonita.getColumnModel().getColumn(4).setMinWidth(150);
        tablaBonita.getColumnModel().getColumn(4).setHeaderValue(resourceMap.getString("tablaBonita.columnModel.title4")); // NOI18N
        tablaBonita.getColumnModel().getColumn(5).setMinWidth(200);
        tablaBonita.getColumnModel().getColumn(5).setHeaderValue(resourceMap.getString("tablaBonita.columnModel.title5")); // NOI18N
        tablaBonita.getColumnModel().getColumn(6).setHeaderValue(resourceMap.getString("tablaBonita.columnModel.title6")); // NOI18N
        tablaBonita.getColumnModel().getColumn(7).setHeaderValue(resourceMap.getString("tablaBonita.columnModel.title7")); // NOI18N
        tablaBonita.getColumnModel().getColumn(8).setHeaderValue(resourceMap.getString("tablaBonita.columnModel.title8")); // NOI18N
        tablaBonita.getColumnModel().getColumn(9).setHeaderValue(resourceMap.getString("tablaBonita.columnModel.title9")); // NOI18N
        tablaBonita.getColumnModel().getColumn(10).setHeaderValue(resourceMap.getString("tablaBonita.columnModel.title10")); // NOI18N

        jPanel2.add(jScrollPane3);
        jScrollPane3.setBounds(510, 70, 823, 490);

        jPanel5.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel5.setName("jPanel5"); // NOI18N

        listaCobradores.setName("listaCobradores"); // NOI18N
        BCobradores cobrador = new BCobradores();
        cobrador.ConectarSQL();
        try {
            cobrador.getNombreApellido(listaCobradores);
        }catch (SQLException ex ){listaCobradores.addItem("Error");}
        cobrador.CerrarSQL();
        listaCobradores.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                listaCobradoresActionPerformed(evt);
            }
        });

        botonImprimir.setText(resourceMap.getString("botonImprimir.text")); // NOI18N
        botonImprimir.setName("botonImprimir"); // NOI18N
        botonImprimir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonImprimirActionPerformed(evt);
            }
        });

        botonCobranza.setText(resourceMap.getString("botonCobranza.text")); // NOI18N
        botonCobranza.setName("botonCobranza"); // NOI18N
        botonCobranza.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonCobranzaActionPerformed(evt);
            }
        });

        botonCalcularPagos.setText(resourceMap.getString("botonCalcularPagos.text")); // NOI18N
        botonCalcularPagos.setName("botonCalcularPagos"); // NOI18N
        botonCalcularPagos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonCalcularPagosActionPerformed(evt);
            }
        });

        jLabel2.setText(resourceMap.getString("jLabel2.text")); // NOI18N
        jLabel2.setName("jLabel2"); // NOI18N

        campoPagos.setText(resourceMap.getString("campoPagos.text")); // NOI18N
        campoPagos.setName("campoPagos"); // NOI18N

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(listaCobradores, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(botonImprimir, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(botonCobranza, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel5Layout.createSequentialGroup()
                            .addComponent(jLabel2)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(campoPagos))
                        .addComponent(botonCalcularPagos, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(309, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(listaCobradores, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(115, 115, 115)
                .addComponent(botonImprimir, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(39, 39, 39)
                .addComponent(botonCobranza, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(39, 39, 39)
                .addComponent(botonCalcularPagos, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(34, 34, 34)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(campoPagos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(217, Short.MAX_VALUE))
        );

        jPanel2.add(jPanel5);
        jPanel5.setBounds(0, 10, 480, 630);

        pCaja.addTab(resourceMap.getString("jPanel2.TabConstraints.tabTitle"), jPanel2); // NOI18N

        jPanel3.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel3.setName("jPanel3"); // NOI18N

        jScrollPane4.setName("jScrollPane4"); // NOI18N

        tablaCaja.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        tablaCaja.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Concepto", "Debe", "Haber", "Fecha"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, true, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tablaCaja.setName("tablaCaja"); // NOI18N
        jScrollPane4.setViewportView(tablaCaja);
        tablaCaja.getColumnModel().getColumn(0).setHeaderValue(resourceMap.getString("tablaCaja.columnModel.title0")); // NOI18N
        tablaCaja.getColumnModel().getColumn(1).setHeaderValue(resourceMap.getString("tablaCaja.columnModel.title1")); // NOI18N
        tablaCaja.getColumnModel().getColumn(2).setHeaderValue(resourceMap.getString("tablaCaja.columnModel.title2")); // NOI18N
        tablaCaja.getColumnModel().getColumn(3).setHeaderValue(resourceMap.getString("tablaCaja.columnModel.title3")); // NOI18N

        botonIngreso.setText(resourceMap.getString("botonIngreso.text")); // NOI18N
        botonIngreso.setName("botonIngreso"); // NOI18N
        botonIngreso.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonIngresoActionPerformed(evt);
            }
        });

        botonEgreso.setText(resourceMap.getString("botonEgreso.text")); // NOI18N
        botonEgreso.setName("botonEgreso"); // NOI18N
        botonEgreso.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonEgresoActionPerformed(evt);
            }
        });

        jPanel4.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel4.setName("jPanel4"); // NOI18N

        listaMeses.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Enero", "Febrero", "Marzo", "Abril", "Mayo", "Junio", "Julio", "Agosto", "Septiembre", "Octubre", "Noviembre", "Diciembre" }));
        listaMeses.setName("listaMeses"); // NOI18N

        listaCobradoresCaja.setName("listaCobradoresCaja"); // NOI18N
        BCobradores cobrador13 = new BCobradores();
        cobrador13.ConectarSQL();
        try {
            cobrador13.getNombreApellido(listaCobradoresCaja);
        }catch (SQLException ex ){listaCobradoresCaja.addItem("Error");}
        cobrador13.CerrarSQL();

        campoCobranzaTotal.setEditable(false);
        campoCobranzaTotal.setText(resourceMap.getString("campoCobranzaTotal.text")); // NOI18N
        campoCobranzaTotal.setName("campoCobranzaTotal"); // NOI18N

        BotonCobraza.setText(resourceMap.getString("BotonCobraza.text")); // NOI18N
        BotonCobraza.setName("BotonCobraza"); // NOI18N
        BotonCobraza.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonCobrazaActionPerformed(evt);
            }
        });

        jLabel3.setFont(resourceMap.getFont("jLabel3.font")); // NOI18N
        jLabel3.setText(resourceMap.getString("jLabel3.text")); // NOI18N
        jLabel3.setName("jLabel3"); // NOI18N

        jLabel4.setFont(resourceMap.getFont("jLabel4.font")); // NOI18N
        jLabel4.setText(resourceMap.getString("jLabel4.text")); // NOI18N
        jLabel4.setName("jLabel4"); // NOI18N

        cbVerListaMeses.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Todo el año", "Enero", "Febrero", "Marzo", "Abril", "Mayo", "Junio", "Julio", "Agosto", "Septiembre", "Octubre", "Noviembre", "Diciembre", " " }));
        cbVerListaMeses.setName("cbVerCajaPorMeses"); // NOI18N

        jButton1.setText(resourceMap.getString("btnActualizarCaja.text")); // NOI18N
        jButton1.setName("btnActualizarCaja"); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        btnImprimirCaja.setIcon(resourceMap.getIcon("btnImprimirCaja.icon")); // NOI18N
        btnImprimirCaja.setText(resourceMap.getString("btnImprimirCaja.text")); // NOI18N
        btnImprimirCaja.setName("btnImprimirCaja"); // NOI18N
        btnImprimirCaja.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnImprimirCajaActionPerformed(evt);
            }
        });

        jLabel5.setFont(resourceMap.getFont("jLabel5.font")); // NOI18N
        jLabel5.setText(resourceMap.getString("jLabel5.text")); // NOI18N
        jLabel5.setName("jLabel5"); // NOI18N

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(BotonCobraza, javax.swing.GroupLayout.DEFAULT_SIZE, 201, Short.MAX_VALUE)
                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(listaCobradoresCaja, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(listaMeses, javax.swing.GroupLayout.Alignment.LEADING, 0, 201, Short.MAX_VALUE))
                    .addComponent(campoCobranzaTotal, javax.swing.GroupLayout.DEFAULT_SIZE, 201, Short.MAX_VALUE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4)
                    .addComponent(cbVerListaMeses, 0, 201, Short.MAX_VALUE)
                    .addComponent(jButton1)
                    .addComponent(btnImprimirCaja, javax.swing.GroupLayout.DEFAULT_SIZE, 201, Short.MAX_VALUE)
                    .addComponent(jLabel5))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(listaMeses, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(listaCobradoresCaja, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(BotonCobraza, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(campoCobranzaTotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cbVerListaMeses, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton1)
                .addGap(21, 21, 21)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnImprimirCaja)
                .addContainerGap(185, Short.MAX_VALUE))
        );

        jLabel1.setFont(resourceMap.getFont("jLabel1.font")); // NOI18N
        jLabel1.setText(resourceMap.getString("jLabel1.text")); // NOI18N
        jLabel1.setName("jLabel1"); // NOI18N

        campoSaldo.setEditable(false);
        campoSaldo.setText(resourceMap.getString("campoSaldo.text")); // NOI18N
        campoSaldo.setName("campoSaldo"); // NOI18N

        botonActualizar.setText(resourceMap.getString("botonActualizar.text")); // NOI18N
        botonActualizar.setName("botonActualizar"); // NOI18N
        botonActualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonActualizarActionPerformed(evt);
            }
        });

        jScrollPane5.setName("jScrollPane5"); // NOI18N

        jtxtNotepad.setColumns(20);
        jtxtNotepad.setRows(5);
        jtxtNotepad.setName("jtxtNotepad"); // NOI18N
        jtxtNotepad.setText(note.getTexto());
        jScrollPane5.setViewportView(jtxtNotepad);
        note.CerrarSQL();

        jLabel7.setText(resourceMap.getString("jLabel7.text")); // NOI18N
        jLabel7.setName("jLabel7"); // NOI18N

        btnGuardarNotepad.setText(resourceMap.getString("btnGuardarNotepad.text")); // NOI18N
        btnGuardarNotepad.setName("btnGuardarNotepad"); // NOI18N
        btnGuardarNotepad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarNotepadActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 765, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(65, 65, 65)
                        .addComponent(botonIngreso, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 93, Short.MAX_VALUE)
                        .addComponent(botonActualizar)
                        .addGap(34, 34, 34)
                        .addComponent(botonEgreso, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 298, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel7)
                                    .addGroup(jPanel3Layout.createSequentialGroup()
                                        .addComponent(jLabel1)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(campoSaldo)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnGuardarNotepad)))))
                .addGap(21, 21, 21))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(botonIngreso, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(botonEgreso, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(botonActualizar))
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(49, 49, 49)
                                .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(65, 65, 65)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel1)
                                    .addComponent(campoSaldo, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel7)
                                    .addComponent(btnGuardarNotepad))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 452, Short.MAX_VALUE))))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 625, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        pCaja.addTab(resourceMap.getString("jPanel3.TabConstraints.tabTitle"), jPanel3); // NOI18N

        barraMenu.setName("barraMenu"); // NOI18N

        mArchivo.setText(resourceMap.getString("mArchivo.text")); // NOI18N
        mArchivo.setName("mArchivo"); // NOI18N
        mArchivo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mArchivoActionPerformed(evt);
            }
        });

        menuAgregarContacto.setText(resourceMap.getString("menuAgregarContacto.text")); // NOI18N
        menuAgregarContacto.setName("menuAgregarContacto"); // NOI18N
        menuAgregarContacto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuAgregarContactoActionPerformed(evt);
            }
        });
        mArchivo.add(menuAgregarContacto);

        menuAgregarCobrador.setText(resourceMap.getString("menuAgregarCobrador.text")); // NOI18N
        menuAgregarCobrador.setName("menuAgregarCobrador"); // NOI18N
        menuAgregarCobrador.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuAgregarCobradorActionPerformed(evt);
            }
        });
        mArchivo.add(menuAgregarCobrador);

        jMenu1.setText(resourceMap.getString("jMenu1.text")); // NOI18N
        jMenu1.setName("jMenu1"); // NOI18N

        jmniCalculadora.setText(resourceMap.getString("jmniCalculadora.text")); // NOI18N
        jmniCalculadora.setName("jmniCalculadora"); // NOI18N
        jmniCalculadora.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmniCalculadoraActionPerformed(evt);
            }
        });
        jMenu1.add(jmniCalculadora);

        mArchivo.add(jMenu1);

        jSeparator1.setName("jSeparator1"); // NOI18N
        mArchivo.add(jSeparator1);

        menuSalir.setText(resourceMap.getString("menuSalir.text")); // NOI18N
        menuSalir.setName("menuSalir"); // NOI18N
        menuSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuSalirActionPerformed(evt);
            }
        });
        mArchivo.add(menuSalir);

        barraMenu.add(mArchivo);

        mEdicion.setText(resourceMap.getString("mEdicion.text")); // NOI18N
        mEdicion.setName("mEdicion"); // NOI18N
        mEdicion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mEdicionActionPerformed(evt);
            }
        });

        guardarCambios.setText(resourceMap.getString("guardarCambios.text")); // NOI18N
        guardarCambios.setName("guardarCambios"); // NOI18N
        guardarCambios.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                guardarCambiosActionPerformed(evt);
            }
        });
        mEdicion.add(guardarCambios);

        jmiAgregarInteres.setText(resourceMap.getString("jmiAgregarInteres.text")); // NOI18N
        jmiAgregarInteres.setName("jmiAgregarInteres"); // NOI18N
        jmiAgregarInteres.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiAgregarInteresActionPerformed(evt);
            }
        });
        mEdicion.add(jmiAgregarInteres);

        barraMenu.add(mEdicion);

        setJMenuBar(barraMenu);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(pCaja, javax.swing.GroupLayout.PREFERRED_SIZE, 1346, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(pCaja, javax.swing.GroupLayout.PREFERRED_SIZE, 730, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void botonPagosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonPagosActionPerformed
        BClientes bcli = new BClientes();
        bcli.ConectarSQL();
        if (pagos == null) {
            JFrame mainFrame = StyleApp.getApplication().getMainFrame();
            try {
                pagos = new HistorialPagos(mainFrame, bcli.getIdFromNomAp(campoNombre.getText(), campoApellido.getText()));

            } catch (SQLException ex) {
                Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
            }
            pagos.setLocationRelativeTo(mainFrame);
        }
        StyleApp.getApplication().show(pagos);
    }//GEN-LAST:event_botonPagosActionPerformed

    private void botonAgregarPlanNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonAgregarPlanNuevoActionPerformed
        if (nuevoPlan == null) {
            JFrame mainFrame = StyleApp.getApplication().getMainFrame();
            nuevoPlan = new NuevoPlan(mainFrame, campoNombre.getText(), campoApellido.getText(), campoDireccion.getText(), campoTelefono.getText(), campoCelular.getText(), campoDireccionPart.getText());
            nuevoPlan.setLocationRelativeTo(mainFrame);
        }
        else{
            nuevoPlan = null;
            JFrame mainFrame = StyleApp.getApplication().getMainFrame();
            nuevoPlan = new NuevoPlan(mainFrame, campoNombre.getText(), campoApellido.getText(), campoDireccion.getText(), campoTelefono.getText(), campoCelular.getText(), campoDireccionPart.getText());
            nuevoPlan.setLocationRelativeTo(mainFrame);
        }
        StyleApp.getApplication().show(nuevoPlan);
    }//GEN-LAST:event_botonAgregarPlanNuevoActionPerformed

    private void menuAgregarContactoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuAgregarContactoActionPerformed
        if (addCont == null) {
            JFrame mainFrame = StyleApp.getApplication().getMainFrame();
            addCont = new CargaContacto(mainFrame);
            addCont.setLocationRelativeTo(mainFrame);
        }
        StyleApp.getApplication().show(addCont);
    }//GEN-LAST:event_menuAgregarContactoActionPerformed

    private void botonIngresoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonIngresoActionPerformed
        if (ingreso == null) {
            JFrame mainFrame = StyleApp.getApplication().getMainFrame();
            ingreso = new Ingreso(mainFrame);
            ingreso.setLocationRelativeTo(mainFrame);
        }
        StyleApp.getApplication().show(ingreso);
    }//GEN-LAST:event_botonIngresoActionPerformed

    private void botonEgresoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonEgresoActionPerformed
        if (egreso == null) {
            JFrame mainFrame = StyleApp.getApplication().getMainFrame();
            egreso = new Egreso(mainFrame);
            egreso.setLocationRelativeTo(mainFrame);
        }
        StyleApp.getApplication().show(egreso);        // TODO add your handling code here:
    }//GEN-LAST:event_botonEgresoActionPerformed

    private void listaBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_listaBuscarActionPerformed
        // TODO add your handling code here:
        BClientes dbc = new BClientes();
        BDeuda dbd = new BDeuda();
        BCuotas dbcuota = new BCuotas();
        BPago dbp = new BPago();
        BCobradores dbcob = new BCobradores();
        dbp.ConectarSQL();
        dbcuota.ConectarSQL();
        dbd.ConectarSQL();
        dbc.ConectarSQL();
        dbcob.ConectarSQL();
        try {
            String param = listaBuscar.getSelectedItem();
            String[] str = param.split(" ");
            int index = Integer.valueOf(str[0]);


            DefaultTableModel modelo = (DefaultTableModel) tablaHistorial.getModel();
            Object[] fila = new Object[4];
            String[][] deudas;

            deudas = dbd.getTodasDeudas(index);

            modelo.setRowCount(0);

            if (index > -1) {

                int indexDeuda = dbd.getIdDeudas(index);
                campoNombre.setText(dbc.getDatosCliente(index)[0]);
                campoApellido.setText(dbc.getDatosCliente(index)[1]);
                campoCelular.setText(dbc.getDatosCliente(index)[2]);
                campoTelefono.setText(dbc.getDatosCliente(index)[3]);
                campoDireccion.setText(dbc.getDatosCliente(index)[4]);
                campoDireccionPart.setText(dbc.getDatosCliente(index)[7]);
                campoParticular.setText(dbc.getDatosCliente(index)[7]);

                if (dbc.clientePago(index) && !dbp.todasCuotasPagadas(index, indexDeuda)) {
                    campoCobrador.setText(dbcob.getDatosCobrador(dbc.getIdCobrador(index))[0] + " " + dbcob.getDatosCobrador(dbc.getIdCobrador(index))[1]);
                    campoMontoPagado.setText(String.valueOf(dbp.getMontoCliente(index, indexDeuda)));
                } else {
                    campoCobrador.setText("");
                    campoMontoPagado.setText("");
                }
                if (indexDeuda > -1 && !dbp.todasCuotasPagadas(index, indexDeuda)) {
                    campoPlanA.setText(dbd.getDatosDeudas(indexDeuda)[1]);
                    campoPlanB.setText(String.valueOf(dbcuota.getMontoCuota(indexDeuda)));
                    campoCuotasPagas.setText(String.valueOf(dbp.contadorPagosVacios(indexDeuda)));
                    double atraso = (Double.valueOf(campoPlanB.getText()) * (Integer.valueOf(dbp.contadorPagosVacios(indexDeuda)))) - Double.valueOf(campoMontoPagado.getText());
                    campoAtraso.setText(String.valueOf(atraso));
                    botonPagos.setEnabled(true);
                    campoInteres.setText(String.valueOf(dbd.getInteres(indexDeuda)));
                } else {
                    campoPlanA.setText("");
                    campoPlanB.setText("");
                    campoCuotasPagas.setText("");
                    campoAtraso.setText("");
                    botonPagos.setEnabled(false);
                }


                for (int i = 0; i < deudas[1].length; i++) {
                    fila[0] = deudas[2][i];
                    fila[1] = deudas[1][i] + " de $" + dbcuota.getMontoCuota(indexDeuda);
                    modelo.addRow(fila);
                }
            }

        } catch (SQLException ex) {
        }

        if (pagos != null) {
            pagos = null;
        }
        
        dbp.CerrarSQL();
        dbcuota.CerrarSQL();
        dbd.CerrarSQL();
        dbc.CerrarSQL();
        dbcob.CerrarSQL();

    }//GEN-LAST:event_listaBuscarActionPerformed

    private void botonBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonBuscarActionPerformed
        String parametro = campoBuscar.getText();
        BClientes dbc = new BClientes();
        dbc.ConectarSQL();
        try {
            dbc.llenarLista(listaBuscar, parametro);
        } catch (SQLException ex) {
            Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
        }
        dbc.CerrarSQL();
    }//GEN-LAST:event_botonBuscarActionPerformed

    private void botonModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonModificarActionPerformed
        campoApellido.setEditable(true);
        campoNombre.setEditable(true);
        campoCelular.setEditable(true);
        campoDireccion.setEditable(true);
        campoTelefono.setEditable(true);
        campoDireccionPart.setEditable(true);
        nuevoCobrador.setEnabled(true);
    }//GEN-LAST:event_botonModificarActionPerformed

    private void mEdicionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mEdicionActionPerformed
    }//GEN-LAST:event_mEdicionActionPerformed

    private void guardarCambiosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_guardarCambiosActionPerformed
        // TODO add your handling code here:
        BClientes dbc = new BClientes();
        dbc.ConectarSQL();

        try {
            int index = dbc.getIdFromNomAp(campoNombre.getText(), campoApellido.getText());
            BCobradores cob = new BCobradores();
            cob.ConectarSQL();
            String[] arrCobrador = new String[2];
            String nombreCobrador = String.valueOf(nuevoCobrador.getSelectedItem());
            arrCobrador = nombreCobrador.split(" ");

            int idCobrador = cob.getIdFromNomAp(arrCobrador[0], arrCobrador[1]);
            dbc.setApellidoCliente(index, campoApellido.getText());
            dbc.setNombreCliente(index, campoNombre.getText());
            dbc.setCelularCliente(index, campoCelular.getText());
            dbc.setDireccionCliente(index, campoDireccion.getText());
            dbc.setTelefonoCliente(index, campoTelefono.getText());
            dbc.setDirParticularCliente(index, campoDireccionPart.getText());
            dbc.cambiarCobrador(index, idCobrador);
            
        } catch (SQLException ex) {
            Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
        }
        campoApellido.setEditable(false);
        campoNombre.setEditable(false);
        campoCelular.setEditable(false);
        campoDireccion.setEditable(false);
        campoTelefono.setEditable(false);
        campoDireccionPart.setEditable(false);
        nuevoCobrador.setEnabled(false);
    }//GEN-LAST:event_guardarCambiosActionPerformed

    private void mArchivoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mArchivoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_mArchivoActionPerformed

    private void menuAgregarCobradorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuAgregarCobradorActionPerformed
        if (addCobr == null) {
            JFrame mainFrame = StyleApp.getApplication().getMainFrame();
            addCobr = new CargaCobrador(mainFrame);
            addCobr.setLocationRelativeTo(mainFrame);
        }
        StyleApp.getApplication().show(addCobr);
    }//GEN-LAST:event_menuAgregarCobradorActionPerformed

    private void menuSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuSalirActionPerformed
        dispose();
    }//GEN-LAST:event_menuSalirActionPerformed

    private void botonCobranzaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonCobranzaActionPerformed
        try {
            DefaultTableModel model = (DefaultTableModel) tablaBonita.getModel();
            Calendar cal = Calendar.getInstance();
            java.util.Date fecha = cal.getTime();

            String[] arrCobrador = new String[2];
            String nombreCobrador = String.valueOf(listaCobradores.getSelectedItem());
            arrCobrador = nombreCobrador.split(" ");
            int index = -1;
            if (tablaCobradoresCorrecta()) {

                BCobradores cob = new BCobradores();
                BPago base = new BPago();
                BClientes dbcli = new BClientes();
                BCaja caja = new BCaja();
                BDeuda deudas = new BDeuda();
                deudas.ConectarSQL();
                caja.ConectarSQL();
                dbcli.ConectarSQL();
                base.ConectarSQL();
                cob.ConectarSQL();

                double totalPagos = 0;
                int idCobrador = cob.getIdFromNomAp(arrCobrador[0], arrCobrador[1]);
                String nombre;
                String[] nombreCortado = new String[2];
                int[] idCliente = new int[model.getRowCount()];
                double[] montoDePagos = new double[model.getRowCount()];
                int[] orden = new int[model.getRowCount()];

                for (int i = 0; i < (montoDePagos.length)-1; i++) {
                    JOptionPane.showMessageDialog(null,i);
                    montoDePagos[i] = Double.valueOf((String) model.getValueAt(i, 1));
                    totalPagos += Double.valueOf((String) model.getValueAt(i, 1));
                    
                    orden[i] = Integer.valueOf(String.valueOf(model.getValueAt(i, 0)));

                }

                for (int h = 0; h < (idCliente.length)-1; h++) {
                    JOptionPane.showMessageDialog(null,h);
                    nombre = (String) model.getValueAt(h, 4);
                    nombreCortado = nombre.split(", ");
                    idCliente[h]=dbcli.getIdFromNomAp(nombreCortado[1], nombreCortado[0]);
                }
                int quierePagar = 1;
                if(base.pagoHoy(idCliente[0]))
                    quierePagar = JOptionPane.showConfirmDialog(null, "ya se ha realizado un pago en el dia de la fecha.\nDesea continuar?","Atencion!",JOptionPane.YES_NO_OPTION);
                
                if(quierePagar == 0 || !base.pagoHoy(idCliente[0])){
                    for (int j = 0; j < (montoDePagos.length)-1; j++) {
                        base.agregarPago(idCliente[j], deudas.getIdDeudas(idCliente[j]), montoDePagos[j], fecha, idCobrador);
                        // hay q ver si se puede hacer esta negrada xq si -.- XD
                        dbcli.setOrden(idCliente[j], orden[j]);
                    }
                    caja.insertarIngreso("Cobranza de " + nombreCobrador, totalPagos);
                    
                    JOptionPane.showMessageDialog(null, "Los pagos se registraron con exito");
                }
                
                deudas.CerrarSQL();
                caja.CerrarSQL();
                base.CerrarSQL();
                dbcli.CerrarSQL();
                cob.CerrarSQL();
            } else {
                JOptionPane.showMessageDialog(null, "no ha completado todos los campos de pago correctamente.", "Error", JOptionPane.ERROR_MESSAGE);
            }

        } catch (SQLException ex) {
            Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
        }


    }//GEN-LAST:event_botonCobranzaActionPerformed

    private void listaCobradoresActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_listaCobradoresActionPerformed
        BCobradores cobradores = new BCobradores();
        cobradores.ConectarSQL();
        // DefaultTableModel modelo = (DefaultTableModel)tablaBonita.getModel();
        String[] cobrar = new String[2];
        String cobrar2 = String.valueOf(listaCobradores.getSelectedItem());
        cobrar = cobrar2.split(" ");
        int id = 1;
        try {
            id = cobradores.getIdFromNomAp(cobrar[0], cobrar[1]);
        } catch (SQLException ex) {
            Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
        }

        cobradores.llenarTablaCobradores(tablaBonita, id);
        TableRowSorter sorter = new TableRowSorter(tablaBonita.getModel());
        tablaBonita.setRowSorter(sorter);
        cobradores.CerrarSQL();
    }//GEN-LAST:event_listaCobradoresActionPerformed

    private void BotonCobrazaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonCobrazaActionPerformed
        BPago pago = new BPago();
        BCobradores cobrador = new BCobradores();
        pago.ConectarSQL();
        cobrador.ConectarSQL();

        String[] arrNombre = new String[2]; // array String con el nombre y apellido.
        String nombreYApellido = (String) listaCobradoresCaja.getSelectedItem();
        arrNombre = nombreYApellido.split(" ");

        try {
            try {
                campoCobranzaTotal.setText(String.valueOf(pago.getMontoTotal(cobrador.getIdFromNomAp(arrNombre[0], arrNombre[1]), listaMeses.getSelectedIndex())));
            } catch (ParseException ex) {
                Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
            }
        } catch (SQLException ex) {
            Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_BotonCobrazaActionPerformed

    private void botonActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonActualizarActionPerformed
        BCaja caja = new BCaja();
        double saldo = 0;
        caja.ConectarSQL();
        try {
            caja.llenarTablaCaja(tablaCaja);
        } catch (SQLException ex) {
            Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
        }
        for (int i = 0; i < tablaCaja.getRowCount(); i++) {
            saldo += (Double) tablaCaja.getValueAt(i, 1);
            saldo -= (Double) tablaCaja.getValueAt(i, 2);
        }
        campoSaldo.setText(String.valueOf(saldo));
        caja.CerrarSQL();
    }//GEN-LAST:event_botonActualizarActionPerformed

    private void botonImprimirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonImprimirActionPerformed
        try {
            String nombreCobrador = String.valueOf(listaCobradores.getSelectedItem());
            java.text.SimpleDateFormat sdf = new java.text.SimpleDateFormat("dd/MM/yyyy");
            java.util.Date fecha = new java.util.Date();
            Calendar calendario = Calendar.getInstance();
            calendario.setTime(fecha);
            calendario.add(Calendar.DATE, 1);
            java.util.Date fecha2 = new java.util.Date(calendario.getTimeInMillis());
            
            
            MessageFormat header = new MessageFormat("Cobrador: " + nombreCobrador + " - " + sdf.format(fecha2));
            tablaBonita.print(JTable.PrintMode.FIT_WIDTH, header, null);
            // TODO add your handling code here:
        } catch (PrinterException ex) {
            Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_botonImprimirActionPerformed

    private void campoAtrasoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_campoAtrasoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_campoAtrasoActionPerformed

private void botonCalcularPagosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonCalcularPagosActionPerformed
    double monto = 0;
    for (int i=0;i<(tablaBonita.getRowCount())-1;i++){
        monto +=  Double.valueOf(String.valueOf(tablaBonita.getValueAt(i, 1)));
    }
    campoPagos.setText(String.valueOf(monto));
    
}//GEN-LAST:event_botonCalcularPagosActionPerformed

private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
// TODO add your handling code here:
            BCaja caja = new BCaja();
        double saldo = 0;
        caja.ConectarSQL();
        try {
            caja.llenarTablaCaja(tablaCaja,cbVerListaMeses.getSelectedIndex());
        } catch (SQLException ex) {
            Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
        }
        for (int i = 0; i < tablaCaja.getRowCount(); i++) {
            saldo += (Double) tablaCaja.getValueAt(i, 1);
            saldo -= (Double) tablaCaja.getValueAt(i, 2);
        }
        campoSaldo.setText(String.valueOf(saldo));
        caja.CerrarSQL();
}//GEN-LAST:event_jButton1ActionPerformed

private void btnImprimirCajaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnImprimirCajaActionPerformed
// TODO add your handling code here:        
    try {

            java.util.Date fecha = new java.util.Date();
            Calendar calendario = Calendar.getInstance();
            calendario.setTime(fecha);
            calendario.add(Calendar.DATE, 1);
            java.util.Date fecha2 = new java.util.Date(calendario.getTimeInMillis());
            
            
            MessageFormat header = new MessageFormat("Resumen Caja");
            tablaCaja.print(JTable.PrintMode.FIT_WIDTH, header, null);
            // TODO add your handling code here:
        } catch (PrinterException ex) {
            Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
        }
}//GEN-LAST:event_btnImprimirCajaActionPerformed

private void btnAgregarInteresActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarInteresActionPerformed
  try {
            BClientes bcli = new BClientes();
            BDeuda bdeuda = new BDeuda();
            BCuotas bcuota = new BCuotas();
            bcli.ConectarSQL();
            bdeuda.ConectarSQL();
            bcuota.ConectarSQL();
            
            int idCliente = -1;
            
            idCliente = bcli.getIdFromNomAp(campoNombre.getText(), campoApellido.getText());
            
            int seguro = JOptionPane.showConfirmDialog(null, "Esta seguro de agregarle interes?", "Atencion", JOptionPane.YES_NO_OPTION);
            if(seguro == 0){
                double interes = Double.valueOf(JOptionPane.showInputDialog("Ingrese el interes"));
                double monto = Double.valueOf(campoPlanA.getText()) * Double.valueOf(campoPlanB.getText());

                int idDeuda = bdeuda.getIdDeudas(idCliente);

                bdeuda.setMontoPrestamo(idDeuda, monto + interes);
                bdeuda.agregarUnaCuota(idDeuda);
                bdeuda.setInteres(idDeuda, interes);
                bcuota.insertarUnaCuota(idDeuda, interes);
                
                bcli.CerrarSQL();
                bdeuda.CerrarSQL();
                bcuota.CerrarSQL();

            }
            
        } catch (SQLException ex) {
            Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
        }
}//GEN-LAST:event_btnAgregarInteresActionPerformed

private void jmiAgregarInteresActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiAgregarInteresActionPerformed
        try {
            BClientes bcli = new BClientes();
            BDeuda bdeuda = new BDeuda();
            BCuotas bcuota = new BCuotas();
            bcli.ConectarSQL();
            bdeuda.ConectarSQL();
            bcuota.ConectarSQL();
            
            int idCliente = -1;
            
            idCliente = bcli.getIdFromNomAp(campoNombre.getText(), campoApellido.getText());
            
            int seguro = JOptionPane.showConfirmDialog(null, "Esta seguro de agregarle interes?", "Atencion", JOptionPane.YES_NO_OPTION);
            if(seguro == 0){
                double interes = Double.valueOf(JOptionPane.showInputDialog("Ingrese el interes"));
                double monto = Double.valueOf(campoPlanA.getText()) * Double.valueOf(campoPlanB.getText());

                int idDeuda = bdeuda.getIdDeudas(idCliente);

                bdeuda.setMontoPrestamo(idDeuda, monto + interes);
                bdeuda.agregarUnaCuota(idDeuda);
                bdeuda.setInteres(idDeuda, interes);
                bcuota.insertarUnaCuota(idDeuda, interes);
                
                bcli.CerrarSQL();
                bdeuda.CerrarSQL();
                bcuota.CerrarSQL();

            }
            
        } catch (SQLException ex) {
            Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
        }
    
}//GEN-LAST:event_jmiAgregarInteresActionPerformed

private void btnGuardarNotepadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarNotepadActionPerformed
    Notepad note = new Notepad();
    note.ConectarSQL();
    String text = jtxtNotepad.getText();
    note.guardarTexto(text);
    note.CerrarSQL();// TODO add your handling code here:
}//GEN-LAST:event_btnGuardarNotepadActionPerformed

private void jmniCalculadoraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmniCalculadoraActionPerformed
   try        
    {
        Runtime rt = Runtime.getRuntime();           
        Process p = rt.exec("calc");            
        p.waitFor();        
    }        
    catch ( IOException ioe )       
    {            
        ioe.printStackTrace();
    }         
    catch ( InterruptedException ie )
    {            
        ie.printStackTrace();     
    }
}//GEN-LAST:event_jmniCalculadoraActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new Main().setVisible(true);

            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BotonCobraza;
    private javax.swing.JMenuBar barraMenu;
    private javax.swing.JButton botonActualizar;
    private javax.swing.JButton botonAgregarPlanNuevo;
    private javax.swing.JButton botonBuscar;
    private javax.swing.JButton botonCalcularPagos;
    private javax.swing.JButton botonCobranza;
    private javax.swing.JButton botonEgreso;
    private javax.swing.JButton botonImprimir;
    private javax.swing.JButton botonIngreso;
    private javax.swing.JButton botonModificar;
    private javax.swing.JButton botonPagos;
    private javax.swing.JButton btnAgregarInteres;
    private javax.swing.JButton btnGuardarNotepad;
    private javax.swing.JButton btnImprimirCaja;
    private javax.swing.JTextField campoApellido;
    private javax.swing.JTextField campoAtraso;
    private javax.swing.JTextField campoBuscar;
    private javax.swing.JTextField campoCelular;
    private javax.swing.JTextField campoCobrador;
    private javax.swing.JTextField campoCobranzaTotal;
    private javax.swing.JTextField campoCuotasPagas;
    private javax.swing.JTextField campoDireccion;
    private javax.swing.JTextField campoDireccionPart;
    private javax.swing.JTextField campoInteres;
    private javax.swing.JTextField campoMontoPagado;
    private javax.swing.JTextField campoNombre;
    private javax.swing.JTextField campoPagos;
    private javax.swing.JTextField campoParticular;
    private javax.swing.JTextField campoPlanA;
    private javax.swing.JTextField campoPlanB;
    private javax.swing.JTextField campoSaldo;
    private javax.swing.JTextArea campoTelefono;
    private javax.swing.JComboBox cbVerListaMeses;
    private javax.swing.JLabel eApellido;
    private javax.swing.JLabel eApellido1;
    private javax.swing.JLabel eAtraso;
    private javax.swing.JLabel eCelular;
    private javax.swing.JLabel eCobradror;
    private javax.swing.JLabel eContacto;
    private javax.swing.JLabel eCorreo;
    private javax.swing.JLabel eCuotasPagas;
    private javax.swing.JLabel eDe;
    private javax.swing.JLabel eDireccion;
    private javax.swing.JLabel eMonto;
    private javax.swing.JLabel eNombre;
    private javax.swing.JLabel eOpciones;
    private javax.swing.JLabel ePLAN;
    private javax.swing.JLabel ePlan;
    private javax.swing.JLabel eTelefono;
    private javax.swing.JMenuItem guardarCambios;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private javax.swing.JMenuItem jmiAgregarInteres;
    private javax.swing.JMenuItem jmniCalculadora;
    private javax.swing.JTextArea jtxtNotepad;
    private java.awt.List listaBuscar;
    private javax.swing.JComboBox listaCobradores;
    private javax.swing.JComboBox listaCobradoresCaja;
    private javax.swing.JComboBox listaMeses;
    private javax.swing.JMenu mArchivo;
    private javax.swing.JMenu mEdicion;
    private javax.swing.JMenuItem menuAgregarCobrador;
    private javax.swing.JMenuItem menuAgregarContacto;
    private javax.swing.JMenuItem menuSalir;
    private javax.swing.JComboBox nuevoCobrador;
    private javax.swing.JTabbedPane pCaja;
    private javax.swing.JTable tablaBonita;
    private javax.swing.JTable tablaCaja;
    private javax.swing.JTable tablaHistorial;
    // End of variables declaration//GEN-END:variables
    private JDialog pagos;
    private JDialog terminar;
    private JDialog nuevoPlan;
    private JDialog addCont;
    private JDialog addCobr;
    private JDialog ingreso;
    private JDialog egreso;
    private JDialog cobranza;
    private BClientes bdClientes;

    public javax.swing.JTextField getCampoApellido() {
        return this.campoApellido;
    }

    public javax.swing.JTextField getCampoNombre() {
        return this.campoNombre;
    }

    public void vaciarCampos() {
        campoApellido.setText("");
        campoNombre.setText("");
        campoDireccionPart.setText("");
        campoDireccion.setText("");
        campoTelefono.setText("");
        campoCobrador.setText("");
        campoPlanA.setText("");
        campoPlanB.setText("");
        campoMontoPagado.setText("");
        campoCuotasPagas.setText("");
        campoAtraso.setText("");

        DefaultTableModel model = (DefaultTableModel) tablaHistorial.getModel();
        model.setRowCount(0);

        listaBuscar.removeAll();
    }

    public boolean tablaCobradoresCorrecta() {
        DefaultTableModel model = (DefaultTableModel) tablaBonita.getModel();
        double[] pagosTabla = new double[model.getRowCount()];
        boolean flag = true;

        for (int i = 0; i < pagosTabla.length; i++) {
            if (model.getValueAt(i, 1) == null) {
                flag = false;
                break;
            }
        }

        return flag;
    }
}
